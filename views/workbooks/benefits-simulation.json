{
    "version": "Notebook/1.0",
    "items": [
      {
        "type": 9,
        "content": {
          "version": "KqlParameterItem/1.0",
          "parameters": [
            {
              "id": "b58b4eb8-5821-44d2-bc7e-54054df27320",
              "version": "KqlParameterItem/1.0",
              "name": "LookbackPeriod",
              "label": "Lookback Period",
              "type": 4,
              "isRequired": true,
              "typeSettings": {
                "selectableValues": [
                  {
                    "durationMs": 604800000
                  },
                  {
                    "durationMs": 1209600000
                  },
                  {
                    "durationMs": 2592000000
                  },
                  {
                    "durationMs": 5184000000
                  },
                  {
                    "durationMs": 7776000000
                  }
                ],
                "allowCustom": true
              },
              "timeContext": {
                "durationMs": 86400000
              },
              "value": {
                "durationMs": 2592000000
              }
            },
            {
              "id": "121c03f2-6ca3-4438-a828-8dffec3e208a",
              "version": "KqlParameterItem/1.0",
              "name": "Subscriptions",
              "type": 2,
              "isRequired": true,
              "multiSelect": true,
              "quote": "'",
              "delimiter": ",",
              "query": "AzureOptimizationConsumptionV1_CL\r\n| where todatetime(Date_s) > todatetime('{LookbackPeriod:startISO}') and todatetime(Date_s) < todatetime('{LookbackPeriod:endISO}') and ChargeType_s == 'Usage' and MeterCategory_s == 'Virtual Machines'\r\n| join kind=leftouter (\r\n    AzureOptimizationResourceContainersV1_CL\r\n    | where TimeGenerated > ago(2d)\r\n    | where ContainerType_s == 'microsoft.resources/subscriptions'\r\n    | distinct SubscriptionId=SubscriptionGuid_g, SubscriptionName=ContainerName_s, Cloud=Cloud_s\r\n) on SubscriptionId\r\n| where Cloud == 'AzureCloud'\r\n| extend PricingModel = iif(isnotempty(PricingModel_s), PricingModel_s, iif(isnotempty(ReservationName_s), 'Reservation', iif(MeterName_s endswith 'Spot', 'Spot', iif(isnotempty(benefitName_s), 'SavingsPlan', 'OnDemand'))))\r\n| where PricingModel == 'OnDemand'\r\n| extend SubscriptionName = iif(isnotempty(SubscriptionName_s), SubscriptionName_s, SubscriptionName)\r\n| distinct SubscriptionName\r\n| order by SubscriptionName asc",
              "typeSettings": {
                "additionalResourceOptions": [
                  "value::all"
                ]
              },
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "value": [
                "value::all"
              ]
            }
          ],
          "style": "pills",
          "queryType": 0,
          "resourceType": "microsoft.operationalinsights/workspaces"
        },
        "name": "parameters - 0"
      },
      {
        "type": 1,
        "content": {
          "json": "Unless specified, usage values unit corresponds to your billing currency. Only applies to Virtual Machines usage in Azure Global.",
          "style": "info"
        },
        "name": "text - 7"
      },
      {
        "type": 3,
        "content": {
          "version": "KqlItem/1.0",
          "query": "AzureOptimizationConsumptionV1_CL\r\n| where todatetime(Date_s) > todatetime('{LookbackPeriod:startISO}') and todatetime(Date_s) < todatetime('{LookbackPeriod:endISO}') and ChargeType_s == 'Usage' and MeterCategory_s == 'Virtual Machines'\r\n| join kind=leftouter (\r\n    AzureOptimizationResourceContainersV1_CL\r\n    | where TimeGenerated > ago(2d)\r\n    | where ContainerType_s == 'microsoft.resources/subscriptions'\r\n    | distinct SubscriptionId=SubscriptionGuid_g, SubscriptionName=ContainerName_s, Cloud=Cloud_s\r\n) on SubscriptionId\r\n| where Cloud == 'AzureCloud'\r\n| extend PricingModel = iif(isnotempty(PricingModel_s), PricingModel_s, iif(isnotempty(ReservationName_s), 'Reservation', iif(MeterName_s endswith 'Spot', 'Spot', iif(isnotempty(benefitName_s), 'SavingsPlan', 'OnDemand'))))\r\n| where PricingModel == 'OnDemand'\r\n| extend SubscriptionName = iif(isnotempty(SubscriptionName_s), SubscriptionName_s, SubscriptionName)\r\n| where SubscriptionName in ({Subscriptions})\r\n| project Date_s, QtyHours=todouble(Quantity_s), BillingMeter=MeterName_s, ArmRegion=ResourceLocation_s, MeterId=MeterId_g, ResourceId, OnDemandPrice=todouble(UnitPrice_s), SubscriptionName\r\n| extend OnDemandCost = QtyHours * OnDemandPrice\r\n| summarize HourlyCost=sum(OnDemandCost)/24 by bin(todatetime(Date_s), 1d), SubscriptionName",
          "size": 1,
          "aggregation": 3,
          "title": "Average On-Demand hourly usage (actual cost)",
          "queryType": 0,
          "resourceType": "microsoft.operationalinsights/workspaces",
          "visualization": "barchart",
          "chartSettings": {
            "seriesLabelSettings": [
              {
                "seriesName": "Reservation",
                "color": "green"
              },
              {
                "seriesName": "OnDemand",
                "color": "red"
              }
            ]
          }
        },
        "name": "onDemandUsageAsIs"
      },
      {
        "type": 11,
        "content": {
          "version": "LinkItem/1.0",
          "style": "tabs",
          "links": [
            {
              "id": "1d33e1ca-6d19-4b74-8903-00c5671b8f87",
              "cellValue": "selectedTab",
              "linkTarget": "parameter",
              "linkLabel": "Savings Plans",
              "subTarget": "SavingsPlans",
              "style": "link"
            },
            {
              "id": "b26e72a1-167d-4449-a8b6-6665814331a3",
              "cellValue": "selectedTab",
              "linkTarget": "parameter",
              "linkLabel": "Reservations",
              "subTarget": "Reservations",
              "style": "link"
            }
          ]
        },
        "name": "analysisTabs"
      },
      {
        "type": 12,
        "content": {
          "version": "NotebookGroup/1.0",
          "groupType": "editable",
          "items": [
            {
              "type": 1,
              "content": {
                "json": "Enter a hourly commitment to estimate your savings according to the lookback period",
                "style": "info"
              },
              "name": "text - 1"
            },
            {
              "type": 9,
              "content": {
                "version": "KqlParameterItem/1.0",
                "parameters": [
                  {
                    "id": "977209de-fdec-4c84-86fd-7b0815aa71e1",
                    "version": "KqlParameterItem/1.0",
                    "name": "SavingsPlanTerm",
                    "label": "Savings Plan Term",
                    "type": 10,
                    "description": "Savings Plan term to get the Savings Plan prices from",
                    "isRequired": true,
                    "typeSettings": {
                      "additionalResourceOptions": [],
                      "showDefault": false
                    },
                    "jsonData": "[\"1 Year\", \"3 Years\"]",
                    "timeContext": {
                      "durationMs": 86400000
                    },
                    "value": "3 Years"
                  },
                  {
                    "id": "368dffea-79c4-45a9-9876-fc77cf691541",
                    "version": "KqlParameterItem/1.0",
                    "name": "HourlyCommitment",
                    "label": "Hourly commitment",
                    "type": 1,
                    "isRequired": true,
                    "value": ""
                  }
                ],
                "style": "above",
                "queryType": 0,
                "resourceType": "microsoft.operationalinsights/workspaces"
              },
              "name": "parameters - 2"
            },
            {
              "type": 3,
              "content": {
                "version": "KqlItem/1.0",
                "query": "AzureOptimizationConsumptionV1_CL\r\n| where todatetime(Date_s) > todatetime('{LookbackPeriod:startISO}') and todatetime(Date_s) < todatetime('{LookbackPeriod:endISO}') and ChargeType_s == 'Usage' and MeterCategory_s == 'Virtual Machines'\r\n| join kind=leftouter (\r\n    AzureOptimizationResourceContainersV1_CL\r\n    | where TimeGenerated > ago(2d)\r\n    | where ContainerType_s == 'microsoft.resources/subscriptions'\r\n    | distinct SubscriptionId=SubscriptionGuid_g, SubscriptionName=ContainerName_s, Cloud=Cloud_s\r\n) on SubscriptionId\r\n| where Cloud == 'AzureCloud'\r\n| extend PricingModel = iif(isnotempty(PricingModel_s), PricingModel_s, iif(isnotempty(ReservationName_s), 'Reservation', iif(MeterName_s endswith 'Spot', 'Spot', iif(isnotempty(benefitName_s), 'SavingsPlan', 'OnDemand'))))\r\n| where PricingModel == 'OnDemand'\r\n| extend SubscriptionName = iif(isnotempty(SubscriptionName_s), SubscriptionName_s, SubscriptionName)\r\n| where SubscriptionName in ({Subscriptions})\r\n| project Date_s, QtyHours=todouble(Quantity_s), BillingMeter=MeterName_s, ArmRegion=ResourceLocation_s, MeterId=MeterId_g, ResourceId, OnDemandPrice=todouble(UnitPrice_s), SubscriptionName\r\n| join kind=inner ( \r\n   AzureOptimizationPricesheetV1_CL\r\n    | where TimeGenerated > ago(14d)\r\n    | where MeterCategory_s == 'Virtual Machines' and OfferId_s == 'MS-AZR-0017P' and PriceType_s == 'Savings Plan' and Term_s == iif('{SavingsPlanTerm}' == '3 Years', 'P3Y', 'P1Y')\r\n    | extend UnitHrs = toint(substring(UnitOfMeasure_s, 0, indexof(UnitOfMeasure_s, 'Hours')-1))\r\n    | extend SavingsPlanPrice = todouble(UnitPrice_s)/UnitHrs\r\n    | distinct MeterId=MeterID_g, SavingsPlanPrice, PartNumber_s\r\n) on MeterId\r\n| extend SavingsPlanCost = QtyHours * SavingsPlanPrice\r\n| summarize HourlyCost=sum(SavingsPlanCost)/24 by bin(todatetime(Date_s), 1d), SubscriptionName",
                "size": 1,
                "aggregation": 3,
                "title": "Average On-Demand hourly usage (Savings Plan prices)",
                "queryType": 0,
                "resourceType": "microsoft.operationalinsights/workspaces",
                "visualization": "barchart",
                "chartSettings": {
                  "seriesLabelSettings": [
                    {
                      "seriesName": "Reservation",
                      "color": "green"
                    },
                    {
                      "seriesName": "OnDemand",
                      "color": "red"
                    }
                  ]
                }
              },
              "name": "onDemandUsageSavingsPlansPerspective"
            },
            {
              "type": 3,
              "content": {
                "version": "KqlItem/1.0",
                "query": "let HourlyCommitment = {HourlyCommitment};\r\nAzureOptimizationConsumptionV1_CL\r\n| where todatetime(Date_s) > todatetime('{LookbackPeriod:startISO}') and todatetime(Date_s) < todatetime('{LookbackPeriod:endISO}') and ChargeType_s == 'Usage' and MeterCategory_s == 'Virtual Machines'\r\n| join kind=leftouter (\r\n    AzureOptimizationResourceContainersV1_CL\r\n    | where TimeGenerated > ago(2d)\r\n    | where ContainerType_s == 'microsoft.resources/subscriptions'\r\n    | distinct SubscriptionId=SubscriptionGuid_g, SubscriptionName=ContainerName_s, Cloud=Cloud_s\r\n) on SubscriptionId\r\n| where Cloud == 'AzureCloud'\r\n| extend PricingModel = iif(isnotempty(PricingModel_s), PricingModel_s, iif(isnotempty(ReservationName_s), 'Reservation', iif(MeterName_s endswith 'Spot', 'Spot', iif(isnotempty(benefitName_s), 'SavingsPlan', 'OnDemand'))))\r\n| where PricingModel == 'OnDemand'\r\n| extend SubscriptionName = iif(isnotempty(SubscriptionName_s), SubscriptionName_s, SubscriptionName)\r\n| where SubscriptionName in ({Subscriptions})\r\n| project Date_s, QtyHours=todouble(Quantity_s), BillingMeter=MeterName_s, ArmRegion=ResourceLocation_s, MeterId=MeterId_g, ResourceId, OnDemandPrice=todouble(UnitPrice_s), SubscriptionName\r\n| join kind=inner ( \r\n    AzureOptimizationPricesheetV1_CL\r\n    | where TimeGenerated > ago(14d)\r\n    | where MeterCategory_s == 'Virtual Machines' and OfferId_s == 'MS-AZR-0017P' and PriceType_s == 'Savings Plan' and Term_s == iif('{SavingsPlanTerm}' == '3 Years', 'P3Y', 'P1Y')\r\n    | extend UnitHrs = toint(substring(UnitOfMeasure_s, 0, indexof(UnitOfMeasure_s, 'Hours')-1))\r\n    | extend SavingsPlanPrice = todouble(UnitPrice_s)/UnitHrs\r\n    | distinct MeterId=MeterID_g, SavingsPlanPrice, PartNumber_s\r\n) on MeterId\r\n| extend SavingsPlanCost = QtyHours * SavingsPlanPrice\r\n| extend OnDemandCost = QtyHours * OnDemandPrice\r\n| extend SavingsPlanDiscount = 1 - SavingsPlanPrice / OnDemandPrice\r\n| extend MeterAndRegion = strcat(BillingMeter, ' - ', ArmRegion)\r\n| summarize HourlySavingsPlanCost=sum(SavingsPlanCost)/24, HourlyOnDemandCost=sum(OnDemandCost)/24, SavingsPlanDiscount=round(avg(SavingsPlanDiscount), 3) by bin(todatetime(Date_s), 1d), MeterAndRegion\r\n| order by todatetime(Date_s), SavingsPlanDiscount\r\n| extend SavingsPlanHourlyBalance = row_cumsum(HourlySavingsPlanCost, prev(Date_s) != Date_s)\r\n| extend CutOff = iif(prev(Date_s) != Date_s or prev(SavingsPlanHourlyBalance, 1, 0) < HourlyCommitment, false, true)\r\n| where not(CutOff)\r\n| extend SavingsAllocationPercentage = iif(SavingsPlanHourlyBalance < HourlyCommitment, 1.0, 1 - (SavingsPlanHourlyBalance - HourlyCommitment) / HourlySavingsPlanCost)\r\n| summarize SavedAmount=sum((HourlyOnDemandCost - HourlySavingsPlanCost) * SavingsAllocationPercentage)*24 by todatetime(Date_s)",
                "size": 1,
                "title": "Estimated savings (in your billing currency)",
                "queryType": 0,
                "resourceType": "microsoft.operationalinsights/workspaces",
                "visualization": "barchart",
                "chartSettings": {
                  "seriesLabelSettings": [
                    {
                      "seriesName": "Reservation",
                      "color": "green"
                    },
                    {
                      "seriesName": "OnDemand",
                      "color": "red"
                    },
                    {
                      "seriesName": "SavedAmount",
                      "label": "Saved Amount"
                    }
                  ]
                }
              },
              "name": "onDemandUsageSavingsPlansSimulation"
            },
            {
              "type": 3,
              "content": {
                "version": "KqlItem/1.0",
                "query": "let HourlyCommitment = {HourlyCommitment};\r\nAzureOptimizationConsumptionV1_CL\r\n| where todatetime(Date_s) > todatetime('{LookbackPeriod:startISO}') and todatetime(Date_s) < todatetime('{LookbackPeriod:endISO}') and ChargeType_s == 'Usage' and MeterCategory_s == 'Virtual Machines'\r\n| join kind=leftouter (\r\n    AzureOptimizationResourceContainersV1_CL\r\n    | where TimeGenerated > ago(2d)\r\n    | where ContainerType_s == 'microsoft.resources/subscriptions'\r\n    | distinct SubscriptionId=SubscriptionGuid_g, SubscriptionName=ContainerName_s, Cloud=Cloud_s\r\n) on SubscriptionId\r\n| where Cloud == 'AzureCloud'\r\n| extend PricingModel = iif(isnotempty(PricingModel_s), PricingModel_s, iif(isnotempty(ReservationName_s), 'Reservation', iif(MeterName_s endswith 'Spot', 'Spot', iif(isnotempty(benefitName_s), 'SavingsPlan', 'OnDemand'))))\r\n| where PricingModel == 'OnDemand'\r\n| extend SubscriptionName = iif(isnotempty(SubscriptionName_s), SubscriptionName_s, SubscriptionName)\r\n| where SubscriptionName in ({Subscriptions})\r\n| project Date_s, QtyHours=todouble(Quantity_s), BillingMeter=MeterName_s, ArmRegion=ResourceLocation_s, MeterId=MeterId_g, ResourceId, OnDemandPrice=todouble(UnitPrice_s), SubscriptionName\r\n| join kind=inner ( \r\n    AzureOptimizationPricesheetV1_CL\r\n    | where TimeGenerated > ago(14d)\r\n    | where MeterCategory_s == 'Virtual Machines' and OfferId_s == 'MS-AZR-0017P' and PriceType_s == 'Savings Plan' and Term_s == iif('{SavingsPlanTerm}' == '3 Years', 'P3Y', 'P1Y')\r\n    | extend UnitHrs = toint(substring(UnitOfMeasure_s, 0, indexof(UnitOfMeasure_s, 'Hours')-1))\r\n    | extend SavingsPlanPrice = todouble(UnitPrice_s)/UnitHrs\r\n    | distinct MeterId=MeterID_g, SavingsPlanPrice, PartNumber_s\r\n) on MeterId\r\n| extend SavingsPlanCost = QtyHours * SavingsPlanPrice\r\n| extend OnDemandCost = QtyHours * OnDemandPrice\r\n| extend SavingsPlanDiscount = 1 - SavingsPlanPrice / OnDemandPrice\r\n| extend MeterAndRegion = strcat(BillingMeter, ' - ', ArmRegion)\r\n| summarize HourlySavingsPlanCost=sum(SavingsPlanCost)/24, HourlyOnDemandCost=sum(OnDemandCost)/24, SavingsPlanDiscount=round(avg(SavingsPlanDiscount), 3) by bin(todatetime(Date_s), 1d), MeterAndRegion\r\n| order by todatetime(Date_s), SavingsPlanDiscount\r\n| extend SavingsPlanHourlyBalance = row_cumsum(HourlySavingsPlanCost, prev(Date_s) != Date_s)\r\n| extend CutOff = iif(prev(Date_s) != Date_s or prev(SavingsPlanHourlyBalance, 1, 0) < HourlyCommitment, false, true)\r\n| where not(CutOff)\r\n| extend SavingsAllocationPercentage = iif(SavingsPlanHourlyBalance < HourlyCommitment, 1.0, 1 - (SavingsPlanHourlyBalance - HourlyCommitment) / HourlySavingsPlanCost)\r\n| summarize SavedAmount=sum((HourlyOnDemandCost - HourlySavingsPlanCost) * SavingsAllocationPercentage)*24, AmountWouldSpendOnDemand=(sum(HourlyOnDemandCost * SavingsAllocationPercentage))*24 by todatetime(Date_s)\r\n| extend SavedPercentage = SavedAmount / AmountWouldSpendOnDemand\r\n| project SavedPercentage, Date_s",
                "size": 1,
                "aggregation": 3,
                "title": "Estimated savings (percentage)",
                "queryType": 0,
                "resourceType": "microsoft.operationalinsights/workspaces",
                "visualization": "barchart",
                "chartSettings": {
                  "seriesLabelSettings": [
                    {
                      "seriesName": "Reservation",
                      "color": "green"
                    },
                    {
                      "seriesName": "OnDemand",
                      "color": "red"
                    },
                    {
                      "seriesName": "SavingsPlanUsagePercentage",
                      "label": "Efficiency"
                    }
                  ],
                  "ySettings": {
                    "numberFormatSettings": {
                      "unit": 17,
                      "options": {
                        "style": "percent",
                        "useGrouping": true
                      }
                    }
                  }
                }
              },
              "name": "onDemandUsageSavingsPlansPercentageSimulation"
            },
            {
              "type": 3,
              "content": {
                "version": "KqlItem/1.0",
                "query": "let HourlyCommitment = {HourlyCommitment};\r\nAzureOptimizationConsumptionV1_CL\r\n| where todatetime(Date_s) > todatetime('{LookbackPeriod:startISO}') and todatetime(Date_s) < todatetime('{LookbackPeriod:endISO}') and ChargeType_s == 'Usage' and MeterCategory_s == 'Virtual Machines'\r\n| join kind=leftouter (\r\n    AzureOptimizationResourceContainersV1_CL\r\n    | where TimeGenerated > ago(2d)\r\n    | where ContainerType_s == 'microsoft.resources/subscriptions'\r\n    | distinct SubscriptionId=SubscriptionGuid_g, SubscriptionName=ContainerName_s, Cloud=Cloud_s\r\n) on SubscriptionId\r\n| where Cloud == 'AzureCloud'\r\n| extend PricingModel = iif(isnotempty(PricingModel_s), PricingModel_s, iif(isnotempty(ReservationName_s), 'Reservation', iif(MeterName_s endswith 'Spot', 'Spot', iif(isnotempty(benefitName_s), 'SavingsPlan', 'OnDemand'))))\r\n| where PricingModel == 'OnDemand'\r\n| extend SubscriptionName = iif(isnotempty(SubscriptionName_s), SubscriptionName_s, SubscriptionName)\r\n| where SubscriptionName in ({Subscriptions})\r\n| project Date_s, QtyHours=todouble(Quantity_s), BillingMeter=MeterName_s, ArmRegion=ResourceLocation_s, MeterId=MeterId_g, ResourceId, OnDemandPrice=todouble(UnitPrice_s), SubscriptionName\r\n| join kind=inner ( \r\n    AzureOptimizationPricesheetV1_CL\r\n    | where TimeGenerated > ago(14d)\r\n    | where MeterCategory_s == 'Virtual Machines' and OfferId_s == 'MS-AZR-0017P' and PriceType_s == 'Savings Plan' and Term_s == iif('{SavingsPlanTerm}' == '3 Years', 'P3Y', 'P1Y')\r\n    | extend UnitHrs = toint(substring(UnitOfMeasure_s, 0, indexof(UnitOfMeasure_s, 'Hours')-1))\r\n    | extend SavingsPlanPrice = todouble(UnitPrice_s)/UnitHrs\r\n    | distinct MeterId=MeterID_g, SavingsPlanPrice, PartNumber_s\r\n) on MeterId\r\n| extend SavingsPlanCost = QtyHours * SavingsPlanPrice\r\n| extend OnDemandCost = QtyHours * OnDemandPrice\r\n| extend SavingsPlanDiscount = 1 - SavingsPlanPrice / OnDemandPrice\r\n| extend MeterAndRegion = strcat(BillingMeter, ' - ', ArmRegion)\r\n| summarize HourlySavingsPlanCost=sum(SavingsPlanCost)/24, HourlyOnDemandCost=sum(OnDemandCost)/24, SavingsPlanDiscount=round(avg(SavingsPlanDiscount), 3) by bin(todatetime(Date_s), 1d), MeterAndRegion\r\n| order by todatetime(Date_s), SavingsPlanDiscount\r\n| extend SavingsPlanHourlyBalance = row_cumsum(HourlySavingsPlanCost, prev(Date_s) != Date_s)\r\n| extend CutOff = iif(prev(Date_s) != Date_s or prev(SavingsPlanHourlyBalance, 1, 0) < HourlyCommitment, false, true)\r\n| where not(CutOff)\r\n| extend SavingsAllocationPercentage = iif(SavingsPlanHourlyBalance < HourlyCommitment, 1.0, 1 - (SavingsPlanHourlyBalance - HourlyCommitment) / HourlySavingsPlanCost)\r\n| summarize AmountSpentOnSavingsPlan=(sum(HourlySavingsPlanCost * SavingsAllocationPercentage))*24 by todatetime(Date_s)\r\n| extend SavingsPlanUsagePercentage = AmountSpentOnSavingsPlan / ({HourlyCommitment}*24)\r\n| project-away AmountSpentOnSavingsPlan",
                "size": 1,
                "aggregation": 3,
                "title": "Estimated efficiency",
                "queryType": 0,
                "resourceType": "microsoft.operationalinsights/workspaces",
                "visualization": "barchart",
                "chartSettings": {
                  "seriesLabelSettings": [
                    {
                      "seriesName": "Reservation",
                      "color": "green"
                    },
                    {
                      "seriesName": "OnDemand",
                      "color": "red"
                    },
                    {
                      "seriesName": "SavingsPlanUsagePercentage",
                      "label": "Efficiency"
                    }
                  ],
                  "customThresholdLine": "1",
                  "customThresholdLineStyle": 4,
                  "ySettings": {
                    "numberFormatSettings": {
                      "unit": 17,
                      "options": {
                        "style": "percent",
                        "useGrouping": true
                      }
                    }
                  }
                }
              },
              "name": "onDemandUsageSavingsPlansEfficiencySimulation"
            }
          ]
        },
        "conditionalVisibility": {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "SavingsPlans"
        },
        "name": "savingsPlansGroup"
      },
      {
        "type": 12,
        "content": {
          "version": "NotebookGroup/1.0",
          "groupType": "editable",
          "items": [
            {
              "type": 1,
              "content": {
                "json": "WORK IN PROGRESS (ignore this tab)\r\nChoose a size (or Instance Size Flexibility Group) and enter a VM quantity to estimate your savings according to the lookback period",
                "style": "error"
              },
              "name": "text - 2"
            },
            {
              "type": 9,
              "content": {
                "version": "KqlParameterItem/1.0",
                "parameters": [
                  {
                    "id": "5955658a-2b0d-4e33-b68d-a55f0792bd48",
                    "version": "KqlParameterItem/1.0",
                    "name": "ReservationTerm",
                    "label": "Reservation Term",
                    "type": 10,
                    "description": "Reservation term to get the Reservations prices from",
                    "isRequired": true,
                    "typeSettings": {
                      "additionalResourceOptions": []
                    },
                    "jsonData": "[\"1 Year\", \"3 Years\"]",
                    "timeContext": {
                      "durationMs": 86400000
                    },
                    "value": "3 Years"
                  }
                ],
                "style": "above",
                "queryType": 0,
                "resourceType": "microsoft.operationalinsights/workspaces"
              },
              "name": "parameters - 3"
            },
            {
              "type": 3,
              "content": {
                "version": "KqlItem/1.0",
                "query": "AzureOptimizationConsumptionV1_CL\r\n| where todatetime(Date_s) > todatetime('{LookbackPeriod:startISO}') and todatetime(Date_s) < todatetime('{LookbackPeriod:endISO}') and ChargeType_s == 'Usage' and MeterCategory_s == 'Virtual Machines'\r\n| join kind=leftouter (\r\n    AzureOptimizationResourceContainersV1_CL\r\n    | where TimeGenerated > ago(2d)\r\n    | where ContainerType_s == 'microsoft.resources/subscriptions'\r\n    | distinct SubscriptionId=SubscriptionGuid_g, SubscriptionName=ContainerName_s, Cloud=Cloud_s\r\n) on SubscriptionId\r\n| where Cloud == 'AzureCloud'\r\n| extend PricingModel = iif(isnotempty(PricingModel_s), PricingModel_s, iif(isnotempty(ReservationName_s), 'Reservation', iif(MeterName_s endswith 'Spot', 'Spot', iif(isnotempty(benefitName_s), 'SavingsPlan', 'OnDemand'))))\r\n| where PricingModel == 'OnDemand'\r\n| extend SubscriptionName = iif(isnotempty(SubscriptionName_s), SubscriptionName_s, SubscriptionName)\r\n| where SubscriptionName in ({Subscriptions})\r\n| extend VCPUs = toint(parse_json(AdditionalInfo_s).VCPUs)\r\n| extend MeterRegion = tostring(split(ProductName_s, ' - ')[2])\r\n| project Date_s, QtyHours=todouble(Quantity_s), BillingMeter=MeterName_s, ArmRegion=ResourceLocation_s, MeterRegion, MeterId=MeterId_g, ResourceId, OnDemandPrice=todouble(UnitPrice_s), SubscriptionName, VCPUs, MeterSubCategory_s\r\n| extend ReservationSKU = strcat(MeterSubCategory_s, ' ', MeterRegion)\r\n| summarize HourlyVCPUs=sum(VCPUs*QtyHours/24) by bin(todatetime(Date_s), 1d), ReservationSKU",
                "size": 1,
                "aggregation": 3,
                "title": "Average On-Demand hourly usage (vCPUs for VM Reservations)",
                "queryType": 0,
                "resourceType": "microsoft.operationalinsights/workspaces",
                "visualization": "barchart",
                "chartSettings": {
                  "seriesLabelSettings": [
                    {
                      "seriesName": "Reservation",
                      "color": "green"
                    },
                    {
                      "seriesName": "OnDemand",
                      "color": "red"
                    }
                  ]
                }
              },
              "name": "onDemandUsageReservationsPerspective"
            }
          ]
        },
        "conditionalVisibility": {
          "parameterName": "selectedTab",
          "comparison": "isEqualTo",
          "value": "Reservations"
        },
        "name": "reservationsGroup"
      }
    ],
    "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
  }